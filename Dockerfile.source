FROM ubuntu:24.04

# Avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# Enable 32-bit architecture
RUN dpkg --add-architecture i386 && apt-get update

# Install Wine build dependencies and runtime dependencies
RUN apt-get install -y --no-install-recommends \
    # Build essentials
    build-essential \
    gcc-multilib \
    g++-multilib \
    flex \
    bison \
    # Source control
    git \
    ca-certificates \
    # Wine build requirements
    autoconf \
    automake \
    libtool \
    pkg-config \
    make \
    # Required for make_unicode
    perl \
    libxml-libxml-perl \
    libdigest-sha-perl \
    wget \
    unzip \
    # X11 and graphics
    libx11-dev libx11-dev:i386 \
    libfreetype6-dev libfreetype6-dev:i386 \
    libxcursor-dev libxcursor-dev:i386 \
    libxi-dev libxi-dev:i386 \
    libxext-dev libxext-dev:i386 \
    libxrandr-dev libxrandr-dev:i386 \
    libxrender-dev libxrender-dev:i386 \
    libgl1-mesa-dev libgl1-mesa-dev:i386 \
    # Audio
    libasound2-dev libasound2-dev:i386 \
    libpulse-dev libpulse-dev:i386 \
    # Other libraries
    libdbus-1-dev libdbus-1-dev:i386 \
    libfontconfig1-dev libfontconfig1-dev:i386 \
    libgnutls28-dev libgnutls28-dev:i386 \
    libncurses-dev libncurses-dev:i386 \
    # MinGW for Windows compatibility
    mingw-w64 \
    # Build acceleration
    ccache \
    && rm -rf /var/lib/apt/lists/*

# Set up ccache
ENV PATH="/usr/lib/ccache:${PATH}"
ENV CCACHE_DIR=/ccache
RUN mkdir -p /ccache && ccache --max-size=2G

# Clone the Wine source with BC4 fixes
WORKDIR /wine-src
ARG CACHEBUST=1
RUN git clone --depth=1 --branch=master https://github.com/SShadowS/wine64-bc4ubuntu.git . || \
    git clone --depth=1 https://github.com/SShadowS/wine-git.git .

# Regenerate configure script to pick up VERSION changes
RUN autoconf

# Regenerate locale data with fixes
RUN cd tools && perl make_unicode && cd ..

# Build 64-bit Wine
WORKDIR /wine-build/wine-64
RUN ../../wine-src/configure \
    CC="ccache gcc" \
    CROSSCC="ccache x86_64-w64-mingw32-gcc" \
    --enable-win64 \
    --prefix=/usr/local \
    --disable-tests \
    && make -j$(nproc)

# Build 32-bit Wine
WORKDIR /wine-build/wine-32
RUN ../../wine-src/configure \
    CC="ccache gcc -m32" \
    CROSSCC="ccache i686-w64-mingw32-gcc" \
    PKG_CONFIG_PATH=/usr/lib/i386-linux-gnu/pkgconfig \
    --with-wine64=../wine-64 \
    --prefix=/usr/local \
    --disable-tests \
    && make -j$(nproc)

# Install Wine properly using Wine's make install (64-bit first, then 32-bit)
WORKDIR /wine-build/wine-64
RUN make install

WORKDIR /wine-build/wine-32
RUN make install

# Clean up build artifacts and development headers (without autoremove to preserve runtime deps)
RUN apt-get remove -y --allow-remove-essential \
    flex bison \
    autoconf automake libtool \
    perl libxml-libxml-perl libdigest-sha-perl \
    mingw-w64 \
    ccache \
    libx11-dev libx11-dev:i386 \
    libfreetype6-dev libfreetype6-dev:i386 \
    libxcursor-dev libxcursor-dev:i386 \
    libxi-dev libxi-dev:i386 \
    libxext-dev libxext-dev:i386 \
    libxrandr-dev libxrandr-dev:i386 \
    libxrender-dev libxrender-dev:i386 \
    libgl1-mesa-dev libgl1-mesa-dev:i386 \
    libasound2-dev libasound2-dev:i386 \
    libpulse-dev libpulse-dev:i386 \
    libdbus-1-dev libdbus-1-dev:i386 \
    libfontconfig1-dev libfontconfig1-dev:i386 \
    libgnutls28-dev libgnutls28-dev:i386 \
    libncurses-dev libncurses-dev:i386 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /wine-src /wine-build /ccache

WORKDIR /

# Verify installation and create wine64 symlink if needed
RUN ls -la /usr/local/bin/wine* && \
    if [ ! -f /usr/local/bin/wine64 ]; then \
        ln -sf /usr/local/bin/wine /usr/local/bin/wine64; \
    fi && \
    wine --version && \
    wine64 --version

# Set up environment
ENV PATH="/usr/local/bin:$PATH"
#ENV WINEPREFIX="/wine"
ENV WINEPREFIX="/root/.local/share/wineprefixes/bc1"
#ENV WINEARCH=win64
ENV WINEDEBUG=-all

# Create the Wine prefix directory
RUN mkdir -p "$WINEPREFIX"

# Initialize Wine prefix
RUN wineboot --init && \
    wineserver --wait

CMD ["wine64", "cmd"]